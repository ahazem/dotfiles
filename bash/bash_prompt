# bash_prompt

tput sgr 0 0

BOLD=$(tput bold)
RESET=$(tput sgr0)
RED=$(tput setaf 37)
ORANGE=$(tput setaf 216)
VIOLET=$(tput setaf 115)
GREEN=$(tput setaf 245)
WHITE=$(tput setaf 254)

style_path="\[${RESET}${RED}\]"
style_chars="\[${RESET}${WHITE}\]"
#style_rvm="\[${RESET}${BOLD}${ORANGE}\]"
style_branch="${GREEN}"

#get_rvm() {
#  local rb
#
#  rb=`rvm-prompt v p g`
#  printf " ${style_chars}using ${style_rvm}${rb}"
#}

is_git_repo() {
  $(git rev-parse --is-inside-work-tree &> /dev/null)
}

is_git_dir() {
  $(git rev-parse --is-inside-git-dir 2> /dev/null)
}

get_git_branch() {
  local branch_name

  # Get the short symbolic ref
  branch_name=$(git symbolic-ref --quiet --short HEAD 2> /dev/null) ||

  # If HEAD isn't a symbolic ref, get the short SHA
  branch_name=$(git rev-parse --short HEAD 2> /dev/null) ||

  # Otherwise, just give up
  branch_name="(unknown)"

  printf $branch_name
}

# Git status information
prompt_git() {
  local git_info git_state uc us ut st

  if ! is_git_repo || is_git_dir; then
    return 1
  fi

  git_info=$(get_git_branch)

  # Check for uncommitted changes in the index
  if ! $(git diff --quiet --ignore-submodules --cached); then
    uc="+"
  fi

  # Check for unstaged changes
  if ! $(git diff-files --quiet --ignore-submodules --); then
    us="!"
  fi

  # Check for untracked files
  if [ -n "$(git ls-files --others --exclude-standard)" ]; then
    ut="?"
  fi

  # Check for stashed files
  if $(git rev-parse --verify refs/stash &>/dev/null); then
    st="$"
  fi

  git_state=$uc$us$ut$st

  # Combine the branch name and state information
  if [[ $git_state ]]; then
    git_info="$git_info[$git_state]"
  fi

  printf "${WHITE} on ${style_branch}${git_info}"
}

# AWS profile
prompt_aws_profile() {
  if [[ -n "${AWS_PROFILE+1}" ]]; then
    printf "${VIOLET} [on AWS] ${ORANGE}${AWS_PROFILE}"
  fi
}

ps1_print() {
  # Build the prompt
  PS1="\[\033]0;\w\007\]"
  PS1+="\n" # Newline
  PS1+="${style_path}\w" # Working directory
  PS1+="\$(prompt_git)" # Git details
  PS1+="${style_aws_profile}"
  PS1+="$(prompt_aws_profile)" # AWS profile used
  # PS1+="$(get_rvm)"
  # PS1+="${style_chars}"
  PS1+="\n" # Newline
  PS1+="${style_chars}\$ \[${RESET}\]" # and reset color
}

PROMPT_COMMAND="ps1_print"
