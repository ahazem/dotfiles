" Misc configuration
set hidden
set number
set showmatch
set matchtime=6
set encoding=utf-8
set history=1000
set timeoutlen=250
set expandtab
set smarttab
set shiftwidth=2
set tabstop=2
set smartindent
set autoindent
set wrap
set ruler
set nobackup
set nowritebackup
set noswapfile
set backspace=indent,eol,start
set incsearch

let mapleader=","

" Vundle + CtrlSpace specific configuration
set nocompatible
filetype off

set rtp+=~/.vim/bundle/vundle.vim/
call vundle#rc()

" Let Vundle manage Vundle
Plugin 'VundleVim/Vundle.vim'

" Manage other bundles too
"Plugin 'Lokaltog/vim-powerline'
Plugin 'scrooloose/nerdtree'
Plugin 'tpope/vim-surround.git'
Plugin 'tpope/vim-rake.git'
Plugin 'tpope/vim-rails.git'

" JavaScript related packages (React / JSX)
Plugin 'pangloss/vim-javascript'
Plugin 'mxw/vim-jsx'
Plugin 'scrooloose/nerdcommenter.git'
"Plugin 'kchmck/vim-coffee-script'
Plugin 'scrooloose/syntastic.git'
Plugin 'godlygeek/tabular.git'
Plugin 'ervandew/supertab'
Plugin 'vim-ruby/vim-ruby.git'
Plugin 'xenoterracide/html.vim'
Plugin 'instant-markdown.vim'
Plugin 'delimitMate.vim'
Plugin 'tpope/vim-endwise.git'
Plugin 'nono/vim-handlebars.git'
Plugin 'mattn/emmet-vim.git'
Plugin 'dsawardekar/ember.vim'
Plugin 'honza/dockerfile.vim'
Plugin 'fatih/vim-go.git'
Plugin 'Shougo/neocomplcache'
Plugin 'Shougo/neosnippet'
Plugin 'Shougo/neosnippet-snippets'
Plugin 'arcticicestudio/nord-vim'
"Plugin 'kien/ctrlp.vim'
Plugin 'rking/ag.vim'
Plugin 'vim-ctrlspace/vim-ctrlspace'
Plugin 'vim-airline/vim-airline'
Plugin 'vim-airline/vim-airline-themes'

" Enable filetype plugins
filetype plugin on
filetype indent on

" NERDTree configuration
autocmd VimEnter * if !argc() | NERDTree | endif

" Colorscheme configuration
colorscheme nord
"set background=dark
syntax on

" Powerline configuration
"let g:Powerline_symbols='fancy'
"let g:Powerline_colorscheme='zenburn'

" Supertab configuration
let g:SuperTabDefaultCompletionType='<C-X><C-O>'

" Rubycomplete configuration
autocmd FileType ruby,eruby set omnifunc=rubycomplete#Complete
autocmd FileType ruby,eruby let g:rubycomplete_buffer_loading = 1
autocmd FileType ruby,eruby let g:rubycomplete_rails = 1
autocmd FileType ruby,eruby let g:rubycomplete_classes_in_global = 1
highlight Pmenu ctermbg=238 gui=bold

" Some keys mappings (save + save and exit)
noremap <Leader>s :w<CR>
inoremap <Leader>s <ESC>:w<CR>i
inoremap <Leader>se <ESC>:w<CR>

" Copy/Paste mappings
noremap <Leader>y :.w !pbcopy<CR><CR>
noremap <Leader>p :r !pbpaste<CR>
vmap <Leader>y :w !pbcopy<CR><CR>

" ctrpl mappings
"let g:ctrlp_map = '<c-p>'
"let g:ctrlp_cmd = 'CtrlP'

" Zencoding mappings
let g:user_zen_expandabbr_key = '<Leader>x'
let g:use_zen_complete_tag = 1
let g:user_zen_emmet_mode = 'a'

" Use ag for searching through files
if executable("ag")
  let g:CtrlSpaceGlobCommand = 'ag -l --nocolor -g ""'
endif

" Save/Reload workspaces on exit/start
let g:CtrlSpaceLoadLastWorkspaceOnStart = 1
let g:CtrlSpaceSaveWorkspaceOnSwitch = 1
let g:CtrlSpaceSaveWorkspaceOnExit = 1
let g:CtrlSpaceUseMouseAndArrowsInTerm = 1

let g:CtrlSpaceFileEngine = ''

" Use higher search timing to ensure responsiveness
let g:CtrlSpaceSearchTiming = 500

" Specify file path formatter
let g:airline#extensions#tabline#formatter = 'unique_tail'

" Use neosnippet instead of utilsnips which is broken on older versions of
" python (it seems)
let g:go_snippet_engine = "neosnippet"

" Go mappings
autocmd FileType go nmap <Leader>r <Plug>(go-run)
